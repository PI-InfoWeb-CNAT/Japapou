# Generated by Django 5.2.3 on 2025-10-23 14:13

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Menu',
                'verbose_name_plural': 'Menus',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('estimate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('altered_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Pedido',
                'verbose_name_plural': 'Pedidos',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Plate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField()),
                ('keywords', models.TextField(blank=True)),
                ('photo', models.ImageField(upload_to='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('altered_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Prato',
                'verbose_name_plural': 'Pratos',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PlateOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'verbose_name': 'Opção de Prato',
                'verbose_name_plural': 'Opções de Pratos',
                'ordering': ['description'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tipo_usuario', models.CharField(blank=True, choices=[('CLIENT', 'Client'), ('DELIVERY_MAN', 'Delivery_man'), ('MANAGER', 'Manager')], default='MANAGER', max_length=20, null=True)),
                ('telefone', models.CharField(blank=True, max_length=20)),
                ('endereco', models.CharField(blank=True, max_length=255)),
                ('cpf', models.CharField(blank=True, max_length=14)),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('foto_perfil', models.ImageField(blank=True, null=True, upload_to='perfil/')),
                ('cnh', models.CharField(blank=True, max_length=10)),
                ('modelo_moto', models.CharField(blank=True, max_length=20)),
                ('cor_moto', models.CharField(blank=True, max_length=10)),
                ('placa_moto', models.CharField(blank=True, max_length=10)),
                ('foto', models.ImageField(blank=True, null=True, upload_to='fotos/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Order_Delivery',
            fields=[
                ('order_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='japapou.order')),
                ('delivery_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('dispatch_date', models.DateTimeField()),
                ('delivery_date', models.DateTimeField()),
            ],
            options={
                'verbose_name': 'Pedido Delivery',
                'verbose_name_plural': 'Pedidos Delivery',
            },
            bases=('japapou.order',),
        ),
        migrations.CreateModel(
            name='Order_Pickup',
            fields=[
                ('order_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='japapou.order')),
                ('pickup_date', models.DateField()),
            ],
            options={
                'verbose_name': 'Pedido Retirada',
                'verbose_name_plural': 'Pedidos Retirados',
            },
            bases=('japapou.order',),
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='japapou.menu')),
            ],
            options={
                'verbose_name': 'Período',
                'verbose_name_plural': 'Períodos',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('comment', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('altered_at', models.DateTimeField(auto_now=True)),
                ('prato', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='items', to='japapou.plate')),
            ],
            options={
                'verbose_name': 'Item de Pedido',
                'verbose_name_plural': 'Itens de Pedidos',
                'ordering': ['created_at'],
            },
        ),
        migrations.AddField(
            model_name='menu',
            name='plates',
            field=models.ManyToManyField(blank=True, to='japapou.plate'),
        ),
        migrations.AddField(
            model_name='plate',
            name='options',
            field=models.ManyToManyField(blank=True, to='japapou.plateoption'),
        ),
        migrations.CreateModel(
            name='CourierReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(choices=[(1, '1 Estrela'), (2, '2 Estrelas'), (3, '3 Estrelas'), (4, '4 Estrelas'), (5, '5 Estrelas')], default=5, verbose_name='Nota')),
                ('comment', models.TextField(max_length=500, verbose_name='Comentário')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('entregador', models.ForeignKey(limit_choices_to={'tipo_usuario': 'DELIVERY_MAN'}, on_delete=django.db.models.deletion.CASCADE, related_name='avaliacoes_recebidas', to=settings.AUTH_USER_MODEL)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Avaliação de Entregador',
                'verbose_name_plural': 'Avaliações de Entregador',
                'ordering': ['-created_at'],
                'constraints': [models.UniqueConstraint(fields=('usuario', 'entregador'), name='unique_user_courier_review')],
            },
        ),
        migrations.CreateModel(
            name='PlateReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(choices=[(1, '1 Estrela'), (2, '2 Estrelas'), (3, '3 Estrelas'), (4, '4 Estrelas'), (5, '5 Estrelas')], default=5, verbose_name='Nota')),
                ('comment', models.TextField(max_length=500, verbose_name='Comentário')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('image_review', models.ImageField(blank=True, null=True, upload_to='PlateReview/')),
                ('plate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avaliacoes_pratos', to='japapou.plate')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Avaliação de Prato',
                'verbose_name_plural': 'Avaliações de Pratos',
                'ordering': ['-created_at'],
                'constraints': [models.UniqueConstraint(fields=('usuario', 'plate'), name='unique_user_plate_review')],
            },
        ),
    ]
